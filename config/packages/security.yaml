security:
  encoders:
    App\Entity\User: bcrypt
  providers:
    database:
      entity:
        class: App\Entity\User
        property: username

  # https://symfony.com/doc/current/security/experimental_authenticators.html
  #enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      json_login:
        #Here authentication will happen (token generation)
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      guard:
        authenticators:
          #- lexik_jwt_authentication.jwt_token_authenticator
          - App\Security\TokenAuthenticator
      #user_checker: App\Security\UserEnabledChecker

  access_control:
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
  role_hierarchy:
    ROLE_ADMIN: [ROLE_USER]
